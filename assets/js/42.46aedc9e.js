(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{321:function(t,e,a){"use strict";a.r(e);var s=a(14),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"types"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#types"}},[t._v("#")]),t._v(" Types")]),t._v(" "),e("p",[t._v("This page contains the documentation of all other types and classes than "),e("RouterLink",{attrs:{to:"/api/model/"}},[t._v("Model")]),t._v(" and "),e("RouterLink",{attrs:{to:"/api/query-builder/"}},[t._v("QueryBuilder")]),t._v(". There are two types of items on this page:")],1),t._v(" "),e("ol",[e("li",[e("code",[t._v("type")]),t._v(": A type is just a POJO (Plain Old Javascript Object) with a set of properties.")]),t._v(" "),e("li",[e("code",[t._v("class")]),t._v(": A class is a JavaScript class with properties and methods.")])]),t._v(" "),e("h2",{attrs:{id:"type-relationmapping"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-relationmapping"}},[t._v("#")]),t._v(" "),e("code",[t._v("type")]),t._v(" RelationMapping")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Property")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("relation")]),t._v(" "),e("td",[t._v("function")]),t._v(" "),e("td",[t._v("The relation type. One of "),e("code",[t._v("Model.BelongsToOneRelation")]),t._v(", "),e("code",[t._v("Model.HasOneRelation")]),t._v(", "),e("code",[t._v("Model.HasManyRelation")]),t._v(", "),e("code",[t._v("Model.ManyToManyRelation")]),t._v(" and "),e("code",[t._v("Model.HasOneThroughRelation")]),t._v(".")])]),t._v(" "),e("tr",[e("td",[t._v("modelClass")]),t._v(" "),e("td",[e("RouterLink",{attrs:{to:"/api/model/"}},[t._v("Model")]),e("br"),t._v("string")],1),t._v(" "),e("td",[t._v("Constructor of the related model class, an absolute path to a module that exports one or a path relative to "),e("RouterLink",{attrs:{to:"/api/model/static-properties.html#static-modelpaths"}},[t._v("modelPaths")]),t._v(" that exports a model class.")],1)]),t._v(" "),e("tr",[e("td",[t._v("join")]),t._v(" "),e("td",[e("RouterLink",{attrs:{to:"/api/types/#type-relationjoin"}},[t._v("RelationJoin")])],1),t._v(" "),e("td",[t._v("Describes how the models are related to each other. See "),e("RouterLink",{attrs:{to:"/api/types/#type-relationjoin"}},[t._v("RelationJoin")]),t._v(".")],1)]),t._v(" "),e("tr",[e("td",[t._v("modify")]),t._v(" "),e("td",[t._v("function("),e("RouterLink",{attrs:{to:"/api/query-builder/"}},[t._v("QueryBuilder")]),t._v(")"),e("br"),t._v("string"),e("br"),t._v("object")],1),t._v(" "),e("td",[t._v("Optional modifier for the relation query. If specified as a function, it will be called each time before fetching the relation. If specified as a string, modifier with specified name will be applied each time when fetching the relation. If specified as an object, it will be used as an additional query parameter - e. g. passing {name: 'Jenny'} would additionally narrow fetched rows to the ones with the name 'Jenny'.")])]),t._v(" "),e("tr",[e("td",[t._v("filter")]),t._v(" "),e("td",[t._v("function("),e("RouterLink",{attrs:{to:"/api/query-builder/"}},[t._v("QueryBuilder")]),t._v(")"),e("br"),t._v("string"),e("br"),t._v("object")],1),t._v(" "),e("td",[t._v("Alias for modify.")])]),t._v(" "),e("tr",[e("td",[t._v("beforeInsert")]),t._v(" "),e("td",[t._v("function("),e("RouterLink",{attrs:{to:"/api/model/"}},[t._v("Model")]),t._v(", "),e("RouterLink",{attrs:{to:"/api/query-builder/other-methods.html#context"}},[t._v("QueryContext")]),t._v(")")],1),t._v(" "),e("td",[t._v("Optional insert hook that is called for each inserted model instance. This function can be async.")])])])]),t._v(" "),e("h2",{attrs:{id:"type-relationjoin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-relationjoin"}},[t._v("#")]),t._v(" "),e("code",[t._v("type")]),t._v(" RelationJoin")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Property")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("from")]),t._v(" "),e("td",[t._v("string"),e("br"),e("RouterLink",{attrs:{to:"/api/objection/#ref"}},[t._v("ReferenceBuilder")]),e("br"),t._v("Array")],1),t._v(" "),e("td",[t._v("The relation column in the owner table. Must be given with the table name. For example "),e("code",[t._v("persons.id")]),t._v(". Composite key can be specified using an array of columns e.g. "),e("code",[t._v("['persons.a', 'persons.b']")]),t._v(". Note that neither this nor "),e("code",[t._v("to")]),t._v(" need to be foreign keys or primary keys. You can join any column to any column. You can even join nested json fields using the "),e("RouterLink",{attrs:{to:"/api/objection/#ref"}},[t._v("ref")]),t._v(" helper.")],1)]),t._v(" "),e("tr",[e("td",[t._v("to")]),t._v(" "),e("td",[t._v("string"),e("br"),e("RouterLink",{attrs:{to:"/api/objection/#ref"}},[t._v("ReferenceBuilder")]),e("br"),t._v("Array")],1),t._v(" "),e("td",[t._v("The relation column in the related table. Must be given with the table name. For example "),e("code",[t._v("movies.id")]),t._v(". Composite key can be specified using an array of columns e.g. "),e("code",[t._v("['movies.a', 'movies.b']")]),t._v(". Note that neither this nor "),e("code",[t._v("from")]),t._v(" need to be foreign keys or primary keys. You can join any column to any column. You can even join nested json fields using the "),e("RouterLink",{attrs:{to:"/api/objection/#ref"}},[t._v("ref")]),t._v(" helper.")],1)]),t._v(" "),e("tr",[e("td",[t._v("through")]),t._v(" "),e("td",[e("RouterLink",{attrs:{to:"/api/types/#type-relationthrough"}},[t._v("RelationThrough")])],1),t._v(" "),e("td",[t._v("Describes the join table if the models are related through one.")])])])]),t._v(" "),e("h2",{attrs:{id:"type-relationthrough"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-relationthrough"}},[t._v("#")]),t._v(" "),e("code",[t._v("type")]),t._v(" RelationThrough")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Property")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("from")]),t._v(" "),e("td",[t._v("string"),e("br"),e("RouterLink",{attrs:{to:"/api/objection/#ref"}},[t._v("ReferenceBuilder")]),e("br"),t._v("Array")],1),t._v(" "),e("td",[t._v("The column that is joined to "),e("code",[t._v("from")]),t._v(" property of the "),e("code",[t._v("RelationJoin")]),t._v(". For example "),e("code",[t._v("Person_movies.actorId")]),t._v(" where "),e("code",[t._v("Person_movies")]),t._v(" is the join table. Composite key can be specified using an array of columns e.g. "),e("code",[t._v("['persons_movies.a', 'persons_movies.b']")]),t._v(". You can join nested json fields using the "),e("RouterLink",{attrs:{to:"/api/objection/#ref"}},[t._v("ref")]),t._v(" helper.")],1)]),t._v(" "),e("tr",[e("td",[t._v("to")]),t._v(" "),e("td",[t._v("string"),e("br"),e("RouterLink",{attrs:{to:"/api/objection/#ref"}},[t._v("ReferenceBuilder")]),e("br"),t._v("Array")],1),t._v(" "),e("td",[t._v("The column that is joined to "),e("code",[t._v("to")]),t._v(" property of the "),e("code",[t._v("RelationJoin")]),t._v(". For example "),e("code",[t._v("Person_movies.movieId")]),t._v(" where "),e("code",[t._v("Person_movies")]),t._v(" is the join table. Composite key can be specified using an array of columns e.g. "),e("code",[t._v("['persons_movies.a', 'persons_movies.b']")]),t._v(". You can join nested json fields using the "),e("RouterLink",{attrs:{to:"/api/objection/#ref"}},[t._v("ref")]),t._v(" helper.")],1)]),t._v(" "),e("tr",[e("td",[t._v("modelClass")]),t._v(" "),e("td",[t._v("string"),e("br"),t._v("ModelClass")]),t._v(" "),e("td",[t._v("If you have a model class for the join table, you should specify it here. This is optional so you don't need to create a model class if you don't want to.")])]),t._v(" "),e("tr",[e("td",[t._v("extra")]),t._v(" "),e("td",[t._v("string"),e("br"),t._v("string[]"),e("br"),t._v("Object")]),t._v(" "),e("td",[t._v("Join table columns listed here are automatically joined to the related objects when they are fetched and automatically written to the join table instead of the related table on insert and update. The values can be aliased by providing an object "),e("code",[t._v("{propertyName: 'columnName', otherPropertyName: 'otherColumnName'} instead of array")]),t._v(" See "),e("RouterLink",{attrs:{to:"/recipes/extra-properties.html"}},[t._v("this recipe")]),t._v(" for more info.")],1)]),t._v(" "),e("tr",[e("td",[t._v("modify")]),t._v(" "),e("td",[t._v("function("),e("RouterLink",{attrs:{to:"/api/query-builder/"}},[t._v("QueryBuilder")]),t._v(")"),e("br"),t._v("string"),e("br"),t._v("object")],1),t._v(" "),e("td",[t._v("Optional modifier for the join table query. If specified as a function, it will be called each time before fetching the relation. If specified as a string, modifier with specified name will be applied each time when fetching the relation. If specified as an object, it will be used as an additional query parameter - e. g. passing {name: 'Jenny'} would additionally narrow fetched rows to the ones with the name 'Jenny'.")])]),t._v(" "),e("tr",[e("td",[t._v("filter")]),t._v(" "),e("td",[t._v("function("),e("RouterLink",{attrs:{to:"/api/query-builder/"}},[t._v("QueryBuilder")]),t._v(")"),e("br"),t._v("string"),e("br"),t._v("object")],1),t._v(" "),e("td",[t._v("Alias for modify.")])]),t._v(" "),e("tr",[e("td",[t._v("beforeInsert")]),t._v(" "),e("td",[t._v("function("),e("RouterLink",{attrs:{to:"/api/model/"}},[t._v("Model")]),t._v(", "),e("RouterLink",{attrs:{to:"/api/query-builder/other-methods.html#context"}},[t._v("QueryContext")]),t._v(")")],1),t._v(" "),e("td",[t._v("Optional insert hook that is called for each inserted join table model instance. This function can be async.")])])])]),t._v(" "),e("h2",{attrs:{id:"type-modeloptions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-modeloptions"}},[t._v("#")]),t._v(" "),e("code",[t._v("type")]),t._v(" ModelOptions")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Property")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("patch")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("If true the json is treated as a patch and the "),e("code",[t._v("required")]),t._v(" field of the json schema is ignored in the validation. This allows us to create models with a subset of required properties for patch operations.")])]),t._v(" "),e("tr",[e("td",[t._v("skipValidation")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("If true the json schema validation is skipped")])]),t._v(" "),e("tr",[e("td",[t._v("old")]),t._v(" "),e("td",[t._v("object")]),t._v(" "),e("td",[t._v("The old values for methods like "),e("code",[t._v("$beforeUpdate")]),t._v(" and "),e("code",[t._v("$beforeValidate")]),t._v(".")])])])]),t._v(" "),e("h2",{attrs:{id:"type-cloneoptions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-cloneoptions"}},[t._v("#")]),t._v(" "),e("code",[t._v("type")]),t._v(" CloneOptions")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Property")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("shallow")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("If true, relations are ignored")])])])]),t._v(" "),e("h2",{attrs:{id:"type-tojsonoptions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-tojsonoptions"}},[t._v("#")]),t._v(" "),e("code",[t._v("type")]),t._v(" ToJsonOptions")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Property")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("shallow")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("If true, relations are ignored. Default is false.")])]),t._v(" "),e("tr",[e("td",[t._v("virtuals")]),t._v(" "),e("td",[t._v("boolean"),e("br"),t._v("string[]")]),t._v(" "),e("td",[t._v("If false, virtual attributes are omitted from the output. Default is true. You can also pass an array of property names and only those virtual properties get picked. You can even pass in property/function names that are not included in the static "),e("code",[t._v("virtualAttributes")]),t._v(" array.")])])])]),t._v(" "),e("h2",{attrs:{id:"type-graphoptions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-graphoptions"}},[t._v("#")]),t._v(" "),e("code",[t._v("type")]),t._v(" GraphOptions")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Property")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("minimize")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("If true the aliases of the joined tables and columns created by "),e("code",[t._v("withGraphJoined")]),t._v(" are minimized. This is sometimes needed because of identifier length limitations of some database engines. objection throws an exception when a query exceeds the length limit. You need to use this only in those cases.")])]),t._v(" "),e("tr",[e("td",[t._v("separator")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("Separator between relations in nested "),e("code",[t._v("withGraphJoined")]),t._v(" query. Defaults to "),e("code",[t._v(":")]),t._v(". Dot ("),e("code",[t._v(".")]),t._v(") cannot be used at the moment because of the way knex parses the identifiers.")])]),t._v(" "),e("tr",[e("td",[t._v("aliases")]),t._v(" "),e("td",[t._v("Object")]),t._v(" "),e("td",[t._v("Aliases for relations in a "),e("code",[t._v("withGraphJoined")]),t._v(" query. Defaults to an empty object.")])]),t._v(" "),e("tr",[e("td",[t._v("joinOperation")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("Which join type to use "),e("code",[t._v("['leftJoin', 'innerJoin', 'rightJoin', ...]")]),t._v(" or any other knex join method name. Defaults to "),e("code",[t._v("leftJoin")]),t._v(".")])]),t._v(" "),e("tr",[e("td",[t._v("maxBatchSize")]),t._v(" "),e("td",[t._v("integer")]),t._v(" "),e("td",[t._v("For how many parents should a relation be fetched using a single query at a time. If you set this to "),e("code",[t._v("1")]),t._v(" then a separate query is used for each parent to fetch a relation. For example if you want to fetch pets for 5 persons, you get five queries (one for each person). Setting this to "),e("code",[t._v("1")]),t._v(" will allow you to use stuff like "),e("code",[t._v("limit")]),t._v(" and aggregate functions in "),e("code",[t._v("modifyGraph")]),t._v(" and other graph modifiers. This can be used to replace the "),e("code",[t._v("naiveEager")]),t._v(" objection 1.x had.")])])])]),t._v(" "),e("h2",{attrs:{id:"type-upsertgraphoptions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-upsertgraphoptions"}},[t._v("#")]),t._v(" "),e("code",[t._v("type")]),t._v(" UpsertGraphOptions")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Property")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("relate")]),t._v(" "),e("td",[t._v("boolean"),e("br"),t._v("string[]")]),t._v(" "),e("td",[t._v("If true, relations are related instead of inserted. Relate functionality can be enabled for a subset of relations of the graph by providing a list of relation expressions. See the examples "),e("RouterLink",{attrs:{to:"/guide/query-examples.html#graph-upserts"}},[t._v("here")]),t._v(".")],1)]),t._v(" "),e("tr",[e("td",[t._v("unrelate")]),t._v(" "),e("td",[t._v("boolean"),e("br"),t._v("string[]")]),t._v(" "),e("td",[t._v("If true, relations are unrelated instead of deleted. Unrelate functionality can be enabled for a subset of relations of the graph by providing a list of relation expressions. See the examples "),e("RouterLink",{attrs:{to:"/guide/query-examples.html#graph-upserts"}},[t._v("here")]),t._v(".")],1)]),t._v(" "),e("tr",[e("td",[t._v("insertMissing")]),t._v(" "),e("td",[t._v("boolean"),e("br"),t._v("string[]")]),t._v(" "),e("td",[t._v("If true, models that have identifiers "),e("em",[t._v("and")]),t._v(" are not found in the database, are inserted. By default this is false and an error is thrown. This functionality can be enabled for a subset of relations of the graph by providing a list of relation expressions. See the examples "),e("RouterLink",{attrs:{to:"/guide/query-examples.html#graph-upserts"}},[t._v("here")]),t._v(".")],1)]),t._v(" "),e("tr",[e("td",[t._v("update")]),t._v(" "),e("td",[t._v("boolean"),e("br"),t._v("string[]")]),t._v(" "),e("td",[t._v("If true, update operations are performed instead of patch when altering existing models, affecting the way the data is validated. With update operations, all required fields need to be present in the data provided. This functionality can be enabled for a subset of relations of the graph by providing a list of relation expressions. See the examples "),e("RouterLink",{attrs:{to:"/guide/query-examples.html#graph-upserts"}},[t._v("here")]),t._v(".")],1)]),t._v(" "),e("tr",[e("td",[t._v("noInsert")]),t._v(" "),e("td",[t._v("boolean"),e("br"),t._v("string[]")]),t._v(" "),e("td",[t._v("If true, no inserts are performed. Inserts can be disabled for a subset of relations of the graph by providing a list of relation expressions. See the examples "),e("RouterLink",{attrs:{to:"/guide/query-examples.html#graph-upserts"}},[t._v("here")]),t._v(".")],1)]),t._v(" "),e("tr",[e("td",[t._v("noUpdate")]),t._v(" "),e("td",[t._v("boolean"),e("br"),t._v("string[]")]),t._v(" "),e("td",[t._v("If true, no updates are performed. Updates can be disabled for a subset of relations of the graph by providing a list of relation expressions. See the examples "),e("RouterLink",{attrs:{to:"/guide/query-examples.html#graph-upserts"}},[t._v("here")]),t._v(".")],1)]),t._v(" "),e("tr",[e("td",[t._v("noDelete")]),t._v(" "),e("td",[t._v("boolean"),e("br"),t._v("string[]")]),t._v(" "),e("td",[t._v("If true, no deletes are performed. Deletes can be disabled for a subset of relations of the graph by providing a list of relation expressions. See the examples "),e("RouterLink",{attrs:{to:"/guide/query-examples.html#graph-upserts"}},[t._v("here")]),t._v(".")],1)]),t._v(" "),e("tr",[e("td",[t._v("noRelate")]),t._v(" "),e("td",[t._v("boolean"),e("br"),t._v("string[]")]),t._v(" "),e("td",[t._v("If true, no relates are performed. Relate operations can be disabled for a subset of relations of the graph by providing a list of relation expressions. See the examples "),e("RouterLink",{attrs:{to:"/guide/query-examples.html#graph-upserts"}},[t._v("here")]),t._v(".")],1)]),t._v(" "),e("tr",[e("td",[t._v("noUnrelate")]),t._v(" "),e("td",[t._v("boolean"),e("br"),t._v("string[]")]),t._v(" "),e("td",[t._v("If true, no unrelate operations are performed. Unrelate operations can be disabled for a subset of relations of the graph by providing a list of relation expressions. See the examples "),e("RouterLink",{attrs:{to:"/guide/query-examples.html#graph-upserts"}},[t._v("here")]),t._v(".")],1)]),t._v(" "),e("tr",[e("td",[t._v("allowRefs")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("This needs to be true if you want to use "),e("code",[t._v("#ref")]),t._v(" in your graphs. See "),e("RouterLink",{attrs:{to:"/guide/query-examples.html#graph-inserts"}},[t._v("this section")]),t._v(" for "),e("code",[t._v("#ref")]),t._v(" usage examples.")],1)])])]),t._v(" "),e("h2",{attrs:{id:"type-insertgraphoptions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-insertgraphoptions"}},[t._v("#")]),t._v(" "),e("code",[t._v("type")]),t._v(" InsertGraphOptions")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Property")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("relate")]),t._v(" "),e("td",[t._v("boolean"),e("br"),t._v("string[]")]),t._v(" "),e("td",[t._v("If true, models with an "),e("code",[t._v("id")]),t._v(" are related instead of inserted. Relate functionality can be enabled for a subset of relations of the graph by providing a list of relation expressions. See the examples "),e("RouterLink",{attrs:{to:"/guide/query-examples.html#graph-inserts"}},[t._v("here")]),t._v(".")],1)]),t._v(" "),e("tr",[e("td",[t._v("allowRefs")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("This needs to be true if you want to use "),e("code",[t._v("#ref")]),t._v(" in your graphs. See "),e("RouterLink",{attrs:{to:"/guide/query-examples.html#graph-inserts"}},[t._v("this section")]),t._v(" for "),e("code",[t._v("#ref")]),t._v(" usage examples.")],1)])])]),t._v(" "),e("h2",{attrs:{id:"type-fetchgraphoptions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-fetchgraphoptions"}},[t._v("#")]),t._v(" "),e("code",[t._v("type")]),t._v(" FetchGraphOptions")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Property")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("transaction")]),t._v(" "),e("td",[t._v("knex"),e("br"),t._v("Transaction")]),t._v(" "),e("td",[t._v("Optional transaction or knex instance for the query. This can be used to specify a transaction or even a different database.")])]),t._v(" "),e("tr",[e("td",[t._v("skipFetched")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("If true, only fetch relations that don't yet exist in the object.")])])])]),t._v(" "),e("h2",{attrs:{id:"type-tablemetadatafetchoptions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-tablemetadatafetchoptions"}},[t._v("#")]),t._v(" "),e("code",[t._v("type")]),t._v(" TableMetadataFetchOptions")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Property")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("table")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("A custom table name. If not given, Model.tableName is used.")])]),t._v(" "),e("tr",[e("td",[t._v("knex")]),t._v(" "),e("td",[t._v("knex"),e("br"),t._v("Transaction")]),t._v(" "),e("td",[t._v("A knex instance or a transaction")])])])]),t._v(" "),e("h2",{attrs:{id:"type-tablemetadataoptions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-tablemetadataoptions"}},[t._v("#")]),t._v(" "),e("code",[t._v("type")]),t._v(" TableMetadataOptions")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Property")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("table")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("A custom table name. If not given, Model.tableName is used.")])])])]),t._v(" "),e("h2",{attrs:{id:"type-tablemetadata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-tablemetadata"}},[t._v("#")]),t._v(" "),e("code",[t._v("type")]),t._v(" TableMetadata")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Property")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("columns")]),t._v(" "),e("td",[t._v("string[]")]),t._v(" "),e("td",[t._v("Names of all the columns in a table.")])])])]),t._v(" "),e("h2",{attrs:{id:"type-statichookarguments"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-statichookarguments"}},[t._v("#")]),t._v(" "),e("code",[t._v("type")]),t._v(" StaticHookArguments")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Property")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("items")]),t._v(" "),e("td",[t._v("Model[]")]),t._v(" "),e("td",[t._v("Items for which the query was started. For example in case of an instance query "),e("code",[t._v("person.$query()")]),t._v(" or "),e("code",[t._v("person.$relatedQuery('pets')")]),t._v(" "),e("code",[t._v("items")]),t._v(" would equal "),e("code",[t._v("[person]")]),t._v(". In case of "),e("code",[t._v("Person.relatedQuery('pets').for([matt, jennifer])")]),t._v(" "),e("code",[t._v("items")]),t._v(" would equal "),e("code",[t._v("[matt, jennifer]")]),t._v(". In many cases like "),e("code",[t._v("Person.query()")]),t._v(" or "),e("code",[t._v("Person.query().findById(1)")]),t._v(" this array is empty. It's only populated when the query has been explicitly started for a set of model instances.")])]),t._v(" "),e("tr",[e("td",[t._v("inputItems")]),t._v(" "),e("td",[t._v("Model[]")]),t._v(" "),e("td",[t._v("Items that were passed as an input for the query. For example in case of "),e("code",[t._v("Person.query().insert(person)")]),t._v(" or "),e("code",[t._v("Person.query().patch(person)")]),t._v(" "),e("code",[t._v("inputItems")]),t._v(" would equal "),e("code",[t._v("[person]")]),t._v(".")])]),t._v(" "),e("tr",[e("td",[t._v("asFindQuery")]),t._v(" "),e("td",[t._v("() => "),e("RouterLink",{attrs:{to:"/api/query-builder/"}},[t._v("QueryBuilder")])],1),t._v(" "),e("td",[t._v("A function that returns a query builder that can be used to fetch the items that were/would get affected by the query being executed. Modifying this query builder doesn't affect the query being executed. For example calling "),e("code",[t._v("await asFindQuery().select('id')")]),t._v(" in a "),e("code",[t._v("beforeDelete")]),t._v(" hook would get you the identifiers of all the items that will get deleted by the query. This query is automatically executed inside any existing transaction. This query builder always returns an array even if the query being executed would return an object, a number or something else.")])]),t._v(" "),e("tr",[e("td",[t._v("transaction")]),t._v(" "),e("td",[t._v("knex"),e("br"),t._v("Transaction")]),t._v(" "),e("td",[t._v("If the query being executed has a transaction, this property will contain it. Otherwise this holds the knex instance installed for the query. Either way, this can and should be passed to any queries executed in the static hooks.")])]),t._v(" "),e("tr",[e("td",[t._v("context")]),t._v(" "),e("td",[t._v("object")]),t._v(" "),e("td",[t._v("The context of the query. See "),e("RouterLink",{attrs:{to:"/api/query-builder/other-methods.html#context"}},[t._v("context")]),t._v(".")],1)]),t._v(" "),e("tr",[e("td",[t._v("relation")]),t._v(" "),e("td",[e("a",{attrs:{href:"#class-relation"}},[t._v("Relation")])]),t._v(" "),e("td",[t._v("If the query is for a relation, this property holds the "),e("a",{attrs:{href:"#class-relation"}},[t._v("Relation")]),t._v(" object. For example when you call "),e("code",[t._v("person.$relatedQuery('pets)")]),t._v(" or "),e("code",[t._v("Person.relatedQuery('movies')")]),t._v(" the "),e("code",[t._v("relation")]),t._v(" will be a relation object for pets and movies relation of "),e("code",[t._v("Person")]),t._v(" respectively.")])]),t._v(" "),e("tr",[e("td",[t._v("cancelQuery")]),t._v(" "),e("td",[t._v("function(any)")]),t._v(" "),e("td",[t._v("Cancels the query being executed. You can pass an arugment for the function and that value will be the result of the query.")])]),t._v(" "),e("tr",[e("td",[t._v("result")]),t._v(" "),e("td",[t._v("any[]")]),t._v(" "),e("td",[t._v("The result of the query. Only available in "),e("code",[t._v("after*")]),t._v(" hooks.")])])])]),t._v(" "),e("h2",{attrs:{id:"type-fieldexpression"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-fieldexpression"}},[t._v("#")]),t._v(" "),e("code",[t._v("type")]),t._v(" FieldExpression")]),t._v(" "),e("p",[t._v("Field expressions are strings that allow you to refer to JSONB fields inside columns.")]),t._v(" "),e("p",[t._v("Syntax: "),e("code",[t._v("<column reference>[:<json field reference>]")])]),t._v(" "),e("p",[t._v("e.g. "),e("code",[t._v("persons.jsonColumnName:details.names[1]")]),t._v(" would refer to value "),e("code",[t._v("'Second'")]),t._v(" in column "),e("code",[t._v("persons.jsonColumnName")]),t._v(" which has\n"),e("code",[t._v("{ details: { names: ['First', 'Second', 'Last'] } }")]),t._v(" object stored in it.")]),t._v(" "),e("p",[t._v("First part "),e("code",[t._v("<column reference>")]),t._v(" is compatible with column references used in knex e.g. "),e("code",[t._v("MyFancyTable.tributeToThBestColumnNameEver")]),t._v(".")]),t._v(" "),e("p",[t._v("Second part describes a path to an attribute inside the referred column. It is optional and it always starts with colon which follows directly with first path element. e.g. "),e("code",[t._v("Table.jsonObjectColumnName:jsonFieldName")]),t._v(" or "),e("code",[t._v("Table.jsonArrayColumn:[321]")]),t._v(".")]),t._v(" "),e("p",[t._v("Syntax supports "),e("code",[t._v("[<key or index>]")]),t._v(" and "),e("code",[t._v(".<key or index>")]),t._v(" flavors of reference to json keys / array indexes:")]),t._v(" "),e("p",[t._v("e.g. both "),e("code",[t._v("Table.myColumn:[1][3]")]),t._v(" and "),e("code",[t._v("Table.myColumn:1.3")]),t._v(" would access correctly both of the following objects "),e("code",[t._v('[null, [null,null,null, "I was accessed"]]')]),t._v(" and "),e("code",[t._v('{ "1": { "3" : "I was accessed" } }')])]),t._v(" "),e("p",[t._v("Caveats when using special characters in keys:")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("objectColumn.key")]),t._v(" This is the most common syntax, good if you are not using dots or square brackets "),e("code",[t._v("[]")]),t._v(" in your json object key name.")]),t._v(" "),e("li",[t._v("Keys containing dots "),e("code",[t._v("objectColumn:[keywith.dots]")]),t._v(" Column "),e("code",[t._v('{ "keywith.dots" : "I was referred" }')])]),t._v(" "),e("li",[t._v("Keys containing square brackets "),e("code",[t._v("column['[]']")]),t._v(" "),e("code",[t._v('{ "[]" : "This is getting ridiculous..." }')])]),t._v(" "),e("li",[t._v("Keys containing square brackets and quotes "),e("code",[t._v("objectColumn:['Double.\"Quote\".[]']")]),t._v(" and "),e("code",[t._v("objectColumn:[\"Sinlge.'Quote'.[]\"]")]),t._v(" Column "),e("code",[t._v('{ "Double.\\"Quote\\".[]" : "I was referred", "Sinlge.\'Quote\'.[]" : "Mee too!" }')])]),t._v(" "),e("li",[t._v("Keys containing dots, square brackets, single quotes and double quotes in one json key is not currently supported")])]),t._v(" "),e("p",[t._v("There are some special methods that accept "),e("code",[t._v("FieldExpression")]),t._v(" strings directly, like "),e("RouterLink",{attrs:{to:"/api/query-builder/find-methods.html#wherejsonsupersetof"}},[t._v("whereJsonSupersetOf")]),t._v(" but you can use "),e("code",[t._v("FieldExpressions")]),t._v(" anywhere with "),e("RouterLink",{attrs:{to:"/api/objection/#ref"}},[t._v("ref")]),t._v(". Here's an example:")],1),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ref "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'objection'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" Person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("select")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'persons.jsonColumn:details.name'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("castText")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("as")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'persons.jsonColumn:details.age'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("castInt")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("as")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'age'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'someTable'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'persons.jsonColumn:details.name'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("castText")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'='")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'someTable.name'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("where")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'age'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'>'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'someTable.ageLimit'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("In the above example, we assume "),e("code",[t._v("persons")]),t._v(" table has a column named "),e("code",[t._v("jsonColumn")]),t._v(" of type "),e("code",[t._v("jsonb")]),t._v(" (only works on postgres).")]),t._v(" "),e("h2",{attrs:{id:"type-relationexpression"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-relationexpression"}},[t._v("#")]),t._v(" "),e("code",[t._v("type")]),t._v(" RelationExpression")]),t._v(" "),e("p",[t._v("Relation expression is a simple DSL for expressing relation trees.")]),t._v(" "),e("p",[t._v("These strings are all valid relation expressions:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("children")])]),t._v(" "),e("li",[e("code",[t._v("children.movies")])]),t._v(" "),e("li",[e("code",[t._v("[children, pets]")])]),t._v(" "),e("li",[e("code",[t._v("[children.movies, pets]")])]),t._v(" "),e("li",[e("code",[t._v("[children.[movies, pets], pets]")])]),t._v(" "),e("li",[e("code",[t._v("[children.[movies.actors.[children, pets], pets], pets]")])]),t._v(" "),e("li",[e("code",[t._v("[children as kids, pets(filterDogs) as dogs]")])])]),t._v(" "),e("p",[t._v("There are two tokens that have special meaning: "),e("code",[t._v("*")]),t._v(" and "),e("code",[t._v("^")]),t._v(". "),e("code",[t._v("*")]),t._v(' means "all relations recursively" and '),e("code",[t._v("^")]),t._v(' means "this relation recursively".')]),t._v(" "),e("p",[t._v("For example "),e("code",[t._v("children.*")]),t._v(' means "relation '),e("code",[t._v("children")]),t._v(' and all its relations, and all their relations and ...".')]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("The * token must be used with caution or you will end up fetching your entire database.")])]),t._v(" "),e("p",[t._v("Expression "),e("code",[t._v("parent.^")]),t._v(" is equivalent to "),e("code",[t._v("parent.parent.parent.parent...")]),t._v(" up to the point a relation no longer has results for the "),e("code",[t._v("parent")]),t._v(" relation. The recursion can be limited to certain depth by giving the depth after the "),e("code",[t._v("^")]),t._v(" character. For example "),e("code",[t._v("parent.^3")]),t._v(" is equal to "),e("code",[t._v("parent.parent.parent")]),t._v(".")]),t._v(" "),e("p",[t._v("Relations can be aliased using the "),e("code",[t._v("as")]),t._v(" keyword.")]),t._v(" "),e("p",[t._v("For example the expression "),e("code",[t._v("children.[movies.actors.[pets, children], pets]")]),t._v(" represents a tree:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("              children\n              (Person)\n                 |\n         -----------------\n         |               |\n       movies           pets\n      (Movie)         (Animal)\n         |\n       actors\n      (Person)\n         |\n    -----------\n    |         |\n   pets    children\n (Animal)  (Person)\n\n")])])]),e("p",[t._v("The model classes are shown in parenthesis. When given to "),e("code",[t._v("withGraphFetched")]),t._v(" method, this expression would fetch all relations as shown in the tree above:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" people "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" Person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("withGraphFetched")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'children.[movies.actors.[pets, children], pets]'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// All persons have the given relation tree fetched.")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("people"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("movies"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("actors"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pets"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Relation expressions can have arguments. Arguments are used to refer to modifier functions (either "),e("RouterLink",{attrs:{to:"/api/model/static-properties.html#static-modifiers"}},[t._v("global")]),t._v(" or "),e("RouterLink",{attrs:{to:"/api/query-builder/other-methods.html#modifiers"}},[t._v("local")]),t._v(". Arguments are listed in parenthesis after the relation names like this:")],1),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("Person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("withGraphFetched")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("children(arg1, arg2).[movies.actors(arg3), pets]")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("You can spread relation expressions to multiple lines and add whitespace:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("Person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("withGraphFetched")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("[\n    children.[\n      pets,\n      movies.actors.[\n        pets,\n        children\n      ]\n    ]\n  ]")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Relation expressions can be aliased using "),e("code",[t._v("as")]),t._v(" keyword:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("Person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("withGraphFetched")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("[\n    children as kids.[\n      pets(filterDogs) as dogs,\n      pets(filterCats) as cats,\n\n      movies.actors.[\n        pets,\n        children as kids\n      ]\n    ]\n  ]")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h3",{attrs:{id:"relationexpression-object-notation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#relationexpression-object-notation"}},[t._v("#")]),t._v(" RelationExpression object notation")]),t._v(" "),e("p",[t._v("In addition to the string expressions, a more verbose object notation can also be used.")]),t._v(" "),e("p",[t._v("The string expression in the comment is equivalent to the object expression below it:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `children`")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `children.movies`")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("movies")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `[children, pets]`")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("pets")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `[children.[movies, pets], pets]`")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("movies")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("pets")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("pets")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `parent.^`")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("parent")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("$recursive")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `parent.^5`")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("parent")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("$recursive")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `parent.*`")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("parent")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("$allRecursive")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `[children as kids, pets(filterDogs) as dogs]`")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("kids")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("$relation")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'children'")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("dogs")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("$relation")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pets'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("$modify")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'filterDogs'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"type-transactionobject"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-transactionobject"}},[t._v("#")]),t._v(" "),e("code",[t._v("type")]),t._v(" TransactionObject")]),t._v(" "),e("p",[t._v("This is nothing more than a knex transaction object. It can be used as a knex query builder, it can be "),e("RouterLink",{attrs:{to:"/guide/transactions.html#passing-around-a-transaction-object"}},[t._v("passed to objection queries")]),t._v(" and "),e("RouterLink",{attrs:{to:"/guide/transactions.html#binding-models-to-a-transaction"}},[t._v("models can be bound to it")])],1),t._v(" "),e("p",[t._v("See the section about "),e("RouterLink",{attrs:{to:"/guide/transactions.html"}},[t._v("transactions")]),t._v(" for more info and examples.")],1),t._v(" "),e("h3",{attrs:{id:"instance-methods"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#instance-methods"}},[t._v("#")]),t._v(" Instance Methods")]),t._v(" "),e("h4",{attrs:{id:"commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commit"}},[t._v("#")]),t._v(" commit()")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" promise "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" trx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Call this method to commit the transaction. This only needs to be called if you use "),e("code",[t._v("transaction.start()")]),t._v(" method.")]),t._v(" "),e("h4",{attrs:{id:"rollback"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rollback"}},[t._v("#")]),t._v(" rollback()")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" promise "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" trx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rollback")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Call this method to rollback the transaction. This only needs to be called if you use "),e("code",[t._v("transaction.start()")]),t._v(" method. You need to pass the error to the method as the only argument.")]),t._v(" "),e("h2",{attrs:{id:"class-validationerror"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#class-validationerror"}},[t._v("#")]),t._v(" "),e("code",[t._v("class")]),t._v(" ValidationError")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ValidationError "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'objection'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ValidationError")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("For each "),e("code",[t._v("key")]),t._v(", a list of errors is given. Each error contains the default "),e("code",[t._v("message")]),t._v(" (as returned by the validator), an optional "),e("code",[t._v("keyword")]),t._v(" string to identify the validation rule which didn't pass and a "),e("code",[t._v("param")]),t._v(" object which optionally contains more details about the context of the validation error.")]),t._v(" "),e("p",[t._v("If "),e("code",[t._v("type")]),t._v(" is anything else but "),e("code",[t._v('"ModelValidation"')]),t._v(", "),e("code",[t._v("data")]),t._v(" can be any object that describes the error.")]),t._v(" "),e("p",[t._v("Error of this class is thrown by default if validation of any input fails. By input we mean any data that can come from the outside world, like model instances (or POJOs), relation expressions object graphs etc.")]),t._v(" "),e("p",[t._v("You can replace this error by overriding "),e("RouterLink",{attrs:{to:"/api/model/static-methods.html#static-createvalidationerror"}},[t._v("Model.createValidationError()")]),t._v(" method.")],1),t._v(" "),e("p",[t._v("See the "),e("RouterLink",{attrs:{to:"/recipes/error-handling.html"}},[t._v("error handling recipe")]),t._v(" for more info.")],1),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Property")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("statusCode")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("HTTP status code for interop with express error handlers and other libraries that search for status code from errors.")])]),t._v(" "),e("tr",[e("td",[t._v("type")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v('One of "ModelValidation", "RelationExpression", "UnallowedRelation" and "InvalidGraph". This can be any string for your own custom errors. The listed values are used internally by objection.')])]),t._v(" "),e("tr",[e("td",[t._v("data")]),t._v(" "),e("td",[t._v("object")]),t._v(" "),e("td",[t._v('The content of this property is documented below for "ModelValidation" errors. For other types, this can be any data.')])])])]),t._v(" "),e("p",[t._v("If "),e("code",[t._v("type")]),t._v(" is "),e("code",[t._v('"ModelValidation"')]),t._v(" then "),e("code",[t._v("data")]),t._v(" object should follow this pattern:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("key1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("message")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("keyword")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'required'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("params")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("message")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("keyword")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("params")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("key2")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("message")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("keyword")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'minLength'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("params")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("limit")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"class-notfounderror"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#class-notfounderror"}},[t._v("#")]),t._v(" "),e("code",[t._v("class")]),t._v(" NotFoundError")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" NotFoundError "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'objection'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NotFoundError")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Error of this class is thrown by default by "),e("RouterLink",{attrs:{to:"/api/query-builder/other-methods.html#throwifnotfound"}},[t._v("throwIfNotFound()")])],1),t._v(" "),e("p",[t._v("You can replace this error by overriding "),e("RouterLink",{attrs:{to:"/api/model/static-methods.html#static-createnotfounderror"}},[t._v("Model.createNotFoundError()")]),t._v(" method.")],1),t._v(" "),e("p",[t._v("See the "),e("RouterLink",{attrs:{to:"/recipes/error-handling.html"}},[t._v("error handling recipe")]),t._v(" for more info.")],1),t._v(" "),e("h2",{attrs:{id:"class-relation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#class-relation"}},[t._v("#")]),t._v(" "),e("code",[t._v("class")]),t._v(" Relation")]),t._v(" "),e("p",[e("code",[t._v("Relation")]),t._v(" is a parsed and normalized instance of a "),e("RouterLink",{attrs:{to:"/api/types/#type-relationmapping"}},[t._v("RelationMapping")]),t._v(". "),e("code",[t._v("Relation")]),t._v("s can be accessed using the "),e("RouterLink",{attrs:{to:"/api/model/static-methods.html#static-getrelations"}},[t._v("getRelations")]),t._v(" method.")],1),t._v(" "),e("p",[e("code",[t._v("Relation")]),t._v(" holds a "),e("RouterLink",{attrs:{to:"/api/types/#class-relationproperty"}},[t._v("RelationProperty")]),t._v(" instance for each property that is used to create the relationship between two tables.")],1),t._v(" "),e("p",[e("code",[t._v("Relation")]),t._v(" is actually a base class for all relation types "),e("code",[t._v("BelongsToOneRelation")]),t._v(", "),e("code",[t._v("HasManyRelation")]),t._v(" etc. You can use "),e("code",[t._v("instanceof")]),t._v(" to determine the type of the relations (see the example on the right). Note that "),e("code",[t._v("HasOneRelation")]),t._v(" is a subclass of "),e("code",[t._v("HasManyRelation")]),t._v(" and "),e("code",[t._v("HasOneThroughRelation")]),t._v(" is a subclass of "),e("code",[t._v("ManyToManyRelation")]),t._v(". Arrange your "),e("code",[t._v("instanceof")]),t._v(" checks accordingly.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Property")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("name")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("Name of the relation. For example "),e("code",[t._v("pets")]),t._v(" or "),e("code",[t._v("children")]),t._v(".")])]),t._v(" "),e("tr",[e("td",[t._v("ownerModelClass")]),t._v(" "),e("td",[t._v("function")]),t._v(" "),e("td",[t._v("The model class that has defined the relation.")])]),t._v(" "),e("tr",[e("td",[t._v("relatedModelClass")]),t._v(" "),e("td",[t._v("function")]),t._v(" "),e("td",[t._v("The model class of the related objects.")])]),t._v(" "),e("tr",[e("td",[t._v("ownerProp")]),t._v(" "),e("td",[e("RouterLink",{attrs:{to:"/api/types/#class-relationproperty"}},[t._v("RelationProperty")])],1),t._v(" "),e("td",[t._v("The relation property in the "),e("code",[t._v("ownerModelClass")]),t._v(".")])]),t._v(" "),e("tr",[e("td",[t._v("relatedProp")]),t._v(" "),e("td",[e("RouterLink",{attrs:{to:"/api/types/#class-relationproperty"}},[t._v("RelationProperty")])],1),t._v(" "),e("td",[t._v("The relation property in the "),e("code",[t._v("relatedModelClass")]),t._v(".")])]),t._v(" "),e("tr",[e("td",[t._v("joinModelClass")]),t._v(" "),e("td",[t._v("function")]),t._v(" "),e("td",[t._v("The model class representing the join table. This class is automatically generated by Objection if none is provided in the "),e("code",[t._v("join.through.modelClass")]),t._v(" setting of the relation mapping, see "),e("RouterLink",{attrs:{to:"/api/types/#type-relationthrough"}},[t._v("RelationThrough")]),t._v(".")],1)]),t._v(" "),e("tr",[e("td",[t._v("joinTable")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("The name of the join table (only for "),e("code",[t._v("ManyToMany")]),t._v(" and "),e("code",[t._v("HasOneThrough")]),t._v(" relations).")])]),t._v(" "),e("tr",[e("td",[t._v("joinTableOwnerProp")]),t._v(" "),e("td",[e("RouterLink",{attrs:{to:"/api/types/#class-relationproperty"}},[t._v("RelationProperty")])],1),t._v(" "),e("td",[t._v("The join table property pointing to "),e("code",[t._v("ownerProp")]),t._v(" (only for "),e("code",[t._v("ManyToMany")]),t._v(" and "),e("code",[t._v("HasOneThrough")]),t._v(" relations).")])]),t._v(" "),e("tr",[e("td",[t._v("joinTableRelatedProp")]),t._v(" "),e("td",[e("RouterLink",{attrs:{to:"/api/types/#class-relationproperty"}},[t._v("RelationProperty")])],1),t._v(" "),e("td",[t._v("The join table property pointing to "),e("code",[t._v("relatedProp")]),t._v(" (only for "),e("code",[t._v("ManyToMany")]),t._v(" and "),e("code",[t._v("HasOneThrough")]),t._v(" relations).")])])])]),t._v(" "),e("p",[t._v("Note that "),e("code",[t._v("Relation")]),t._v(" instances are actually instances of the relation classes used in "),e("code",[t._v("relationMappings")]),t._v(". For example:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Model")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("relationMappings")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("pets")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("relation")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Model"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HasManyRelation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("modelClass")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Animal"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("join")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("from")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'persons.id'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("to")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'animals.ownerId'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" relations "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRelations")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("relations"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pets "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Model"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HasManyRelation")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// --\x3e true")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("relations"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pets"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// --\x3e pets")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("relations"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pets"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ownerProp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cols"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// --\x3e ['id']")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("relations"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pets"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("relatedProp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cols"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// --\x3e ['ownerId']")]),t._v("\n")])])]),e("h2",{attrs:{id:"class-relationproperty"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#class-relationproperty"}},[t._v("#")]),t._v(" "),e("code",[t._v("class")]),t._v(" RelationProperty")]),t._v(" "),e("p",[t._v("Represents a property that is used to create relationship between two tables. A single "),e("code",[t._v("RelationProperty")]),t._v(" instance can represent\ncomposite key. In addition to a table column, A "),e("code",[t._v("RelationProperty")]),t._v(" can represent a nested field inside a column (for example a jsonb column).")]),t._v(" "),e("h3",{attrs:{id:"properties"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Property")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("size")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("The number of columns. In case of composite key, this is greater than one.")])]),t._v(" "),e("tr",[e("td",[t._v("modelClass")]),t._v(" "),e("td",[t._v("function")]),t._v(" "),e("td",[t._v("The model class that owns the property.")])]),t._v(" "),e("tr",[e("td",[t._v("props")]),t._v(" "),e("td",[t._v("string[]")]),t._v(" "),e("td",[t._v('The column names converted to "external" format. For example if '),e("code",[t._v("modelClass")]),t._v(" defines a snake_case to camelCase conversion, these names are in camelCase. Note that a "),e("code",[t._v("RelationProperty")]),t._v(" may actually point to a sub-properties of the columns in case they are of json or some other non-scalar type. This array always contains only the converted column names. Use "),e("code",[t._v("getProp(obj, idx)")]),t._v(" method to get the actual value from an object.")])]),t._v(" "),e("tr",[e("td",[t._v("cols")]),t._v(" "),e("td",[t._v("string[]")]),t._v(" "),e("td",[t._v("The column names in the database format. For example if "),e("code",[t._v("modelClass")]),t._v(" defines a snake_case to camelCase conversion, these names are in snake_case. Note that a "),e("code",[t._v("RelationProperty")]),t._v(" may actually point to a sub-properties of the columns in case they are of json or some other non-scalar type. This array always contains only the column names.")])])])]),t._v(" "),e("h3",{attrs:{id:"methods"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),e("h4",{attrs:{id:"getprop"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getprop"}},[t._v("#")]),t._v(" getProp()")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" property"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getProp")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Gets this property's index:th value from an object. For example if the property represents a composite key "),e("code",[t._v("[a, b.d.e, c]")]),t._v("\nand obj is "),e("code",[t._v("{a: 1, b: {d: {e: 2}}, c: 3}")]),t._v(" then "),e("code",[t._v("getProp(obj, 1)")]),t._v(" would return "),e("code",[t._v("2")]),t._v(".")]),t._v(" "),e("h4",{attrs:{id:"setprop"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setprop"}},[t._v("#")]),t._v(" setProp()")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("property"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProp")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Sets this property's index:th value in an object. For example if the property represents a composite key "),e("code",[t._v("[a, b.d.e, c]")]),t._v("\nand obj is "),e("code",[t._v("{a: 1, b: {d: {e: 2}}, c: 3}")]),t._v(" then "),e("code",[t._v("setProp(obj, 1, 'foo')")]),t._v(" would mutate "),e("code",[t._v("obj")]),t._v(" into "),e("code",[t._v("{a: 1, b: {d: {e: 'foo'}}, c: 3}")]),t._v(".")]),t._v(" "),e("h4",{attrs:{id:"fullcol"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fullcol"}},[t._v("#")]),t._v(" fullCol()")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" col "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" property"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fullCol")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("builder"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Returns the property's index:th column name with the correct table reference. Something like "),e("code",[t._v('"Table.column"')]),t._v(".\nThe first argument must be an objection "),e("RouterLink",{attrs:{to:"/api/types/#querybuilder"}},[t._v("QueryBuilder")]),t._v(" instance.")],1),t._v(" "),e("h4",{attrs:{id:"ref"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ref"}},[t._v("#")]),t._v(" ref()")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ref "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" property"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("builder"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Allows you to do things like this:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" builder "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ref "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" property"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("builder"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbuilder"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("where")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ref"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'>'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Returns a "),e("RouterLink",{attrs:{to:"/api/objection/#ref"}},[t._v("ReferenceBuilder")]),t._v(" instance that points to the index:th column.")],1),t._v(" "),e("h4",{attrs:{id:"patch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#patch"}},[t._v("#")]),t._v(" patch()")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("property"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("patch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("patchObj"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Allows you to do things like this:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" builder "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" patch "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nproperty"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("patch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("patch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbuilder"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("patch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("patch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Appends an update operation for the index:th column into "),e("code",[t._v("patchObj")]),t._v(" object.")]),t._v(" "),e("h2",{attrs:{id:"class-referencebuilder"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#class-referencebuilder"}},[t._v("#")]),t._v(" "),e("code",[t._v("class")]),t._v(" ReferenceBuilder")]),t._v(" "),e("p",[t._v("An instance of this is returned from the "),e("RouterLink",{attrs:{to:"/api/objection/#ref"}},[t._v("ref")]),t._v(" helper function.")],1),t._v(" "),e("h3",{attrs:{id:"instance-methods-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#instance-methods-2"}},[t._v("#")]),t._v(" Instance Methods")]),t._v(" "),e("h4",{attrs:{id:"casttext"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#casttext"}},[t._v("#")]),t._v(" castText()")]),t._v(" "),e("p",[t._v("Cast reference to sql type "),e("code",[t._v("text")]),t._v(".")]),t._v(" "),e("h4",{attrs:{id:"castint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#castint"}},[t._v("#")]),t._v(" castInt()")]),t._v(" "),e("p",[t._v("Cast reference to sql type "),e("code",[t._v("integer")]),t._v(".")]),t._v(" "),e("h4",{attrs:{id:"castbigint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#castbigint"}},[t._v("#")]),t._v(" castBigInt()")]),t._v(" "),e("p",[t._v("Cast reference to sql type "),e("code",[t._v("bigint")]),t._v(".")]),t._v(" "),e("h4",{attrs:{id:"castfloat"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#castfloat"}},[t._v("#")]),t._v(" castFloat()")]),t._v(" "),e("p",[t._v("Cast reference to sql type "),e("code",[t._v("float")]),t._v(".")]),t._v(" "),e("h4",{attrs:{id:"castdecimal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#castdecimal"}},[t._v("#")]),t._v(" castDecimal()")]),t._v(" "),e("p",[t._v("Cast reference to sql type "),e("code",[t._v("decimal")]),t._v(".")]),t._v(" "),e("h4",{attrs:{id:"castreal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#castreal"}},[t._v("#")]),t._v(" castReal()")]),t._v(" "),e("p",[t._v("Cast reference to sql type "),e("code",[t._v("real")]),t._v(".")]),t._v(" "),e("h4",{attrs:{id:"castbool"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#castbool"}},[t._v("#")]),t._v(" castBool()")]),t._v(" "),e("p",[t._v("Cast reference to sql type "),e("code",[t._v("boolean")]),t._v(".")]),t._v(" "),e("h4",{attrs:{id:"castto"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#castto"}},[t._v("#")]),t._v(" castTo()")]),t._v(" "),e("p",[t._v("Give custom type to which referenced value is cast to.")]),t._v(" "),e("p",[e("code",[t._v(".castTo('mytype') --\x3e CAST(?? as mytype)")])]),t._v(" "),e("h4",{attrs:{id:"castjson"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#castjson"}},[t._v("#")]),t._v(" castJson()")]),t._v(" "),e("p",[t._v("In addition to other casts wrap reference to_jsonb() function so that final value\nreference will be json type.")]),t._v(" "),e("h4",{attrs:{id:"as"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#as"}},[t._v("#")]),t._v(" as()")]),t._v(" "),e("p",[t._v("Gives an alias for the reference "),e("code",[t._v(".select(ref('age').as('yougness'))")])]),t._v(" "),e("h4",{attrs:{id:"from"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#from"}},[t._v("#")]),t._v(" from()")]),t._v(" "),e("p",[t._v("Specifies that table of the reference.")]),t._v(" "),e("p",[t._v("See "),e("RouterLink",{attrs:{to:"/api/objection/#ref"}},[t._v("this")]),t._v(" for some examples.")],1),t._v(" "),e("h2",{attrs:{id:"class-valuebuilder"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#class-valuebuilder"}},[t._v("#")]),t._v(" "),e("code",[t._v("class")]),t._v(" ValueBuilder")]),t._v(" "),e("p",[t._v("An instance of this is returned from the "),e("RouterLink",{attrs:{to:"/api/objection/#val"}},[t._v("val")]),t._v(" helper function. If an object\nis given as a value, it is cast to json by default.")],1),t._v(" "),e("h3",{attrs:{id:"instance-methods-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#instance-methods-3"}},[t._v("#")]),t._v(" Instance Methods")]),t._v(" "),e("h4",{attrs:{id:"casttext-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#casttext-2"}},[t._v("#")]),t._v(" castText()")]),t._v(" "),e("p",[t._v("Cast to sql type "),e("code",[t._v("text")]),t._v(".")]),t._v(" "),e("h4",{attrs:{id:"castint-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#castint-2"}},[t._v("#")]),t._v(" castInt()")]),t._v(" "),e("p",[t._v("Cast to sql type "),e("code",[t._v("integer")]),t._v(".")]),t._v(" "),e("h4",{attrs:{id:"castbigint-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#castbigint-2"}},[t._v("#")]),t._v(" castBigInt()")]),t._v(" "),e("p",[t._v("Cast to sql type "),e("code",[t._v("bigint")]),t._v(".")]),t._v(" "),e("h4",{attrs:{id:"castfloat-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#castfloat-2"}},[t._v("#")]),t._v(" castFloat()")]),t._v(" "),e("p",[t._v("Cast to sql type "),e("code",[t._v("float")]),t._v(".")]),t._v(" "),e("h4",{attrs:{id:"castdecimal-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#castdecimal-2"}},[t._v("#")]),t._v(" castDecimal()")]),t._v(" "),e("p",[t._v("Cast to sql type "),e("code",[t._v("decimal")]),t._v(".")]),t._v(" "),e("h4",{attrs:{id:"castreal-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#castreal-2"}},[t._v("#")]),t._v(" castReal()")]),t._v(" "),e("p",[t._v("Cast to sql type "),e("code",[t._v("real")]),t._v(".")]),t._v(" "),e("h4",{attrs:{id:"castbool-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#castbool-2"}},[t._v("#")]),t._v(" castBool()")]),t._v(" "),e("p",[t._v("Cast to sql type "),e("code",[t._v("boolean")]),t._v(".")]),t._v(" "),e("h4",{attrs:{id:"castto-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#castto-2"}},[t._v("#")]),t._v(" castTo()")]),t._v(" "),e("p",[t._v("Give custom type to which referenced value is cast to.")]),t._v(" "),e("p",[e("code",[t._v(".castTo('mytype') --\x3e CAST(?? as mytype)")])]),t._v(" "),e("h4",{attrs:{id:"castjson-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#castjson-2"}},[t._v("#")]),t._v(" castJson()")]),t._v(" "),e("p",[t._v("Converts the value to json (jsonb in case of postgresql). The default\ncast type for object values.")]),t._v(" "),e("h4",{attrs:{id:"asarray"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#asarray"}},[t._v("#")]),t._v(" asArray()")]),t._v(" "),e("p",[t._v("Converts the value to an array.")]),t._v(" "),e("p",[e("code",[t._v("val([1, 2, 3]).asArray() --\x3e ARRAY[?, ?, ?]")])]),t._v(" "),e("p",[t._v("Can be used in conjuction with "),e("code",[t._v("castTo")]),t._v(".")]),t._v(" "),e("p",[e("code",[t._v("val([1, 2, 3]).asArray().castTo('real[]') -> CAST(ARRAY[?, ?, ?] AS real[])")])]),t._v(" "),e("h4",{attrs:{id:"as-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#as-2"}},[t._v("#")]),t._v(" as()")]),t._v(" "),e("p",[t._v("Gives an alias for the reference "),e("code",[t._v(".select(ref('age').as('yougness'))")])]),t._v(" "),e("h2",{attrs:{id:"class-rawbuilder"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#class-rawbuilder"}},[t._v("#")]),t._v(" "),e("code",[t._v("class")]),t._v(" RawBuilder")]),t._v(" "),e("p",[t._v("An instance of this is returned from the "),e("RouterLink",{attrs:{to:"/api/objection/#raw"}},[t._v("raw")]),t._v(" helper function.")],1),t._v(" "),e("h3",{attrs:{id:"instance-methods-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#instance-methods-4"}},[t._v("#")]),t._v(" Instance Methods")]),t._v(" "),e("h4",{attrs:{id:"as-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#as-3"}},[t._v("#")]),t._v(" as()")]),t._v(" "),e("p",[t._v("Gives an alias for the raw expression "),e("code",[t._v(".select(raw('concat(foo, bar)').as('fooBar'))")]),t._v(".")]),t._v(" "),e("p",[t._v("You should use this instead of inserting the alias to the SQL to give objection more information about the query. Some edge cases, like using "),e("code",[t._v("raw")]),t._v(" in "),e("code",[t._v("select")]),t._v(" inside a "),e("code",[t._v("withGraphJoined")]),t._v(" modifier won't work unless you use this method.")]),t._v(" "),e("h2",{attrs:{id:"class-functionbuilder"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#class-functionbuilder"}},[t._v("#")]),t._v(" "),e("code",[t._v("class")]),t._v(" FunctionBuilder")]),t._v(" "),e("p",[t._v("An instance of this is returned from the "),e("RouterLink",{attrs:{to:"/api/objection/#fn"}},[t._v("fn")]),t._v(" helper function.")],1),t._v(" "),e("h3",{attrs:{id:"instance-methods-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#instance-methods-5"}},[t._v("#")]),t._v(" Instance Methods")]),t._v(" "),e("h4",{attrs:{id:"as-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#as-4"}},[t._v("#")]),t._v(" as()")]),t._v(" "),e("p",[t._v("Gives an alias for the raw expression "),e("code",[t._v(".select(fn('concat', 'foo', 'bar').as('fooBar'))")]),t._v(".")]),t._v(" "),e("p",[t._v("You should use this instead of inserting the alias to the SQL to give objection more information about the query. Some edge cases, like using "),e("code",[t._v("fn")]),t._v(" in "),e("code",[t._v("select")]),t._v(" inside a "),e("code",[t._v("withGraphJoined")]),t._v(" modifier won't work unless you use this method.")]),t._v(" "),e("h2",{attrs:{id:"class-validator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#class-validator"}},[t._v("#")]),t._v(" "),e("code",[t._v("class")]),t._v(" Validator")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Validator "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'objection'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Abstract class from which model validators must be inherited. See the example for explanation. Also check out the "),e("RouterLink",{attrs:{to:"/api/model/static-methods.html#static-createvalidator"}},[t._v("createValidator")]),t._v(" method.")],1),t._v(" "),e("h4",{attrs:{id:"examples"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Validator "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'objection'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyCustomValidator")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Validator")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("validate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("args")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The model instance. May be empty at this point.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" model "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" args"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("model"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The properties to validate. After validation these values will")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// be merged into `model` by objection.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" json "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" args"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `ModelOptions` object. If your custom validator sets default")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// values, you need to check the `opt.patch` boolean. If it is true")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// we are validating a patch object and the defaults should not be set.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" opt "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" args"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A context object shared between the validation methods. A new")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// object is created for each validation operation. You can store")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// any data here.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ctx "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" args"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ctx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do your validation here and throw any exception if the")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// validation fails.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomeValidationAndThrowIfFails")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("json"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// You need to return the (possibly modified) json.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" json"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeValidate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("args")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Takes the same arguments as `validate`. Usually there is no need")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// to override this.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeValidate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterValidate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("args")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Takes the same arguments as `validate`. Usually there is no need")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// to override this.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterValidate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Model "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'objection'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Override the `createValidator` method of a `Model` to use the")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// custom validator.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BaseModel")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Model")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createValidator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyCustomValidator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"class-ajvvalidator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#class-ajvvalidator"}},[t._v("#")]),t._v(" "),e("code",[t._v("class")]),t._v(" AjvValidator")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" AjvValidator "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'objection'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("The default "),e("a",{attrs:{href:"https://github.com/epoberezkin/ajv",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ajv"),e("OutboundLink")],1),t._v(" based json schema\nvalidator. You can override the "),e("RouterLink",{attrs:{to:"/api/model/static-methods.html#static-createvalidator"}},[t._v("createValidator")]),t._v("\nmethod of "),e("RouterLink",{attrs:{to:"/api/model/"}},[t._v("Model")]),t._v(" like in the example to modify the validator.")],1),t._v(" "),e("h4",{attrs:{id:"examples-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#examples-2"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Model"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" AjvValidator "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'objection'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BaseModel")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Model")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createValidator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AjvValidator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onCreateAjv")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ajv")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Here you can modify the `Ajv` instance.")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("options")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("allErrors")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("validateSchema")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ownProperties")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("v5")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);