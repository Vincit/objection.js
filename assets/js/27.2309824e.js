(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{305:function(e,t,o){"use strict";o.r(t);var n=o(14),r=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Objection.js is an "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Object-relational_mapping",target:"_blank",rel:"noopener noreferrer"}},[e._v("ORM"),t("OutboundLink")],1),e._v(" for "),t("a",{attrs:{href:"https://nodejs.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Node.js"),t("OutboundLink")],1),e._v(" that aims to stay out of your way and make it as easy as possible to use the full power of SQL and the underlying database engine while still making the common stuff easy and enjoyable.")]),e._v(" "),t("p",[e._v("Even though ORM is the best commonly known acronym to describe objection, a more accurate description is to call it "),t("strong",[e._v("a relational query builder")]),e._v(". You get all the benefits of an SQL query builder but also a powerful set of tools for working with relations.")]),e._v(" "),t("p",[e._v("Objection.js is built on an SQL query builder called "),t("a",{attrs:{href:"http://knexjs.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("knex"),t("OutboundLink")],1),e._v(". All databases supported by knex are supported by objection.js. "),t("strong",[e._v("SQLite3")]),e._v(", "),t("strong",[e._v("Postgres")]),e._v(" and "),t("strong",[e._v("MySQL")]),e._v(" are "),t("a",{attrs:{href:"https://travis-ci.org/Vincit/objection.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("thoroughly tested"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("p",[e._v("What objection.js gives you:")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("An easy declarative way of "),t("RouterLink",{attrs:{to:"/guide/models.html"}},[e._v("defining models")]),e._v(" and relationships between them")],1)]),e._v(" "),t("li",[t("strong",[e._v("Simple and fun way to "),t("RouterLink",{attrs:{to:"/guide/query-examples.html"}},[e._v("fetch, insert, update and delete")]),e._v(" objects using the full power of SQL")],1)]),e._v(" "),t("li",[t("strong",[e._v("Powerful mechanisms for "),t("RouterLink",{attrs:{to:"/guide/query-examples.html#eager-loading"}},[e._v("eager loading")]),e._v(", "),t("RouterLink",{attrs:{to:"/guide/query-examples.html#graph-inserts"}},[e._v("inserting")]),e._v(" and "),t("RouterLink",{attrs:{to:"/guide/query-examples.html#graph-upserts"}},[e._v("upserting")]),e._v(" object graphs")],1)]),e._v(" "),t("li",[t("strong",[e._v("Easy to use "),t("RouterLink",{attrs:{to:"/guide/transactions.html"}},[e._v("transactions")])],1)]),e._v(" "),t("li",[t("strong",[e._v("Official "),t("a",{attrs:{href:"https://github.com/Vincit/objection.js/blob/main/typings/objection/index.d.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("TypeScript"),t("OutboundLink")],1),e._v(" support")])]),e._v(" "),t("li",[t("strong",[e._v("Optional "),t("RouterLink",{attrs:{to:"/guide/validation.html"}},[e._v("JSON schema")]),e._v(" validation")],1)]),e._v(" "),t("li",[t("strong",[e._v("A way to "),t("RouterLink",{attrs:{to:"/guide/documents.html"}},[e._v("store complex documents")]),e._v(" as single rows")],1)])]),e._v(" "),t("p",[e._v("What objection.js "),t("strong",[e._v("doesn't")]),e._v(" give you:")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("A custom query DSL. SQL is used as a query language.")]),e._v("\nThis doesn't mean you have to write SQL strings though. A query builder based on "),t("a",{attrs:{href:"http://knexjs.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("knex"),t("OutboundLink")],1),e._v(" is\nused to build the SQL. However, if the query builder fails you for some reason, raw SQL strings can be easily\nwritten using the "),t("RouterLink",{attrs:{to:"/api/objection/#raw"}},[e._v("raw")]),e._v(" helper function.")],1),e._v(" "),t("li",[t("strong",[e._v("Automatic database schema creation and migration from model definitions.")]),e._v("\nFor simple things it is useful that the database schema is automatically generated from the model definitions,\nbut usually just gets in your way when doing anything non-trivial. Objection.js leaves the schema related things\nto you. knex has a great "),t("a",{attrs:{href:"https://knexjs.org/guide/migrations.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("migration tool"),t("OutboundLink")],1),e._v(" that we recommend for this job. Check\nout the "),t("a",{attrs:{href:"https://github.com/Vincit/objection.js/tree/main/examples/koa-ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("example project"),t("OutboundLink")],1),e._v(".")])]),e._v(" "),t("p",[e._v("The best way to get started is to clone our "),t("a",{attrs:{href:"https://github.com/Vincit/objection.js/tree/main/examples/koa",target:"_blank",rel:"noopener noreferrer"}},[e._v("example project"),t("OutboundLink")],1),e._v(" and start playing with it. There's also a "),t("a",{attrs:{href:"https://github.com/Vincit/objection.js/tree/main/examples/koa-ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("typescript version"),t("OutboundLink")],1),e._v(" available.")]),e._v(" "),t("p",[e._v("Check out "),t("a",{attrs:{href:"https://github.com/Vincit/objection.js/issues/1069",target:"_blank",rel:"noopener noreferrer"}},[e._v("this issue"),t("OutboundLink")],1),e._v(" to see who is using objection and what they think about it.")])])}),[],!1,null,null,null);t.default=r.exports}}]);